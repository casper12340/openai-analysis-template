{"ast":null,"code":"var _jsxFileName = \"/Users/casper.dekeijzer/Documents/Github Repositories/OpenAI Agent Analysis/openai-agent-analysis/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport ReactMarkdown from \"react-markdown\";\nimport './App.css'; // Ensure to import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [oldData, setOldData] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false); // State to track loading status\n\n  // Function to parse CSV\n  const handleFileUpload = (event, period) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      complete: result => {\n        if (period === \"old\") {\n          setOldData(result.data);\n        } else {\n          setNewData(result.data);\n        }\n      }\n    });\n  };\n  const processPeriodicData = data => {\n    const metrics = {};\n    data.forEach(row => {\n      const name = row[\"Name\"];\n      if (!metrics[name]) {\n        metrics[name] = {\n          \"Messages Sent\": 0,\n          \"Unique Conversations Messaged\": 0,\n          \"Conversations Marked Done\": 0,\n          \"Unique Customers Messaged\": new Set(),\n          \"Avg Conversation Handle Time (s)\": [],\n          \"Avg Sent Messages Per Conversation\": [],\n          \"Avg Sent Messages Per Customer\": [],\n          \"First Contact Resolution Rate\": [],\n          \"Avg Message Response Times (ms)\": [],\n          \"Avg First Response Time (ms)\": [],\n          \"Median First Response Time (ms)\": [],\n          \"Avg Time to First Resolution (ms)\": [],\n          \"Median Time to First Resolution (ms)\": [],\n          \"Total Time Logged In (ms)\": 0,\n          \"Messages Sent With Shortcuts\": 0,\n          \"Percent of Messages Sent With Shortcuts\": []\n        };\n      }\n\n      // Aggregate numerical data\n      metrics[name][\"Messages Sent\"] += row[\"Messages Sent\"] || 0;\n      metrics[name][\"Unique Conversations Messaged\"] += row[\"Unique Conversations Messaged\"] || 0;\n      metrics[name][\"Conversations Marked Done\"] += row[\"Conversations Marked Done\"] || 0;\n      metrics[name][\"Unique Customers Messaged\"].add(row[\"Unique Customers Messaged\"]);\n      metrics[name][\"Total Time Logged In (ms)\"] += row[\"Total Time Logged In (ms)\"] || 0;\n      metrics[name][\"Messages Sent With Shortcuts\"] += row[\"Messages Sent With Shortcuts\"] || 0;\n\n      // Push values for averaging later\n      [\"Avg Conversation Handle Time (s)\", \"Avg Sent Messages Per Conversation\", \"Avg Sent Messages Per Customer\", \"First Contact Resolution Rate\", \"Avg Message Response Times (ms)\", \"Avg First Response Time (ms)\", \"Median First Response Time (ms)\", \"Avg Time to First Resolution (ms)\", \"Median Time to First Resolution (ms)\", \"Percent of Messages Sent With Shortcuts\"].forEach(key => {\n        if (row[key] !== undefined) {\n          metrics[name][key].push(row[key]);\n        }\n      });\n    });\n\n    // Compute averages and finalize data\n    Object.keys(metrics).forEach(name => {\n      Object.keys(metrics[name]).forEach(key => {\n        if (Array.isArray(metrics[name][key])) {\n          const values = metrics[name][key].filter(v => v !== undefined);\n          metrics[name][key] = values.length ? values.reduce((a, b) => a + b, 0) / values.length : 0;\n        }\n      });\n      metrics[name][\"Unique Customers Messaged\"] = metrics[name][\"Unique Customers Messaged\"].size;\n    });\n    return Object.fromEntries(Object.entries(metrics).filter(([_, data]) => data[\"Messages Sent\"] >= 10));\n  };\n  const getPerformanceAnalysis = async () => {\n    setLoading(true);\n    const oldMetrics = processPeriodicData(oldData);\n    const newMetrics = processPeriodicData(newData);\n    const comparisonData = Object.keys({\n      ...oldMetrics,\n      ...newMetrics\n    }).map(name => ({\n      Name: name,\n      \"Oude Data\": oldMetrics[name] || null,\n      \"Nieuwe Data\": newMetrics[name] || null\n    }));\n    const prompt = `\n      Vergelijk de medewerker prestaties voor de volgende periodes:\n      ${JSON.stringify(comparisonData, null, 2)}\n\n      Identificeer prestatietrends, verbeteringen en gebieden die verbetering behoeven.\n    `;\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: process.env.REACT_APP_OPENAI_API_TOKEN\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o-mini\",\n          messages: [{\n            role: \"user\",\n            content: prompt\n          }],\n          max_tokens: 2000\n        })\n      });\n      const result = await response.json();\n      setAnalysis(result.choices[0].message.content);\n    } catch (error) {\n      console.error(\"OpenAI API Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      style: {\n        'textAlign': 'center',\n        'marginTop': '0px'\n      },\n      children: \"Prestaties Vergelijken\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      style: {\n        'textAlign': 'center'\n      },\n      children: \"Upload hier de CSV files van de periodes die je wil vergelijken.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-group\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            'fontWeight': 'bold'\n          },\n          children: \"Oude Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: e => handleFileUpload(e, \"old\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-group\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            'fontWeight': 'bold'\n          },\n          children: \"Nieuwe Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: e => handleFileUpload(e, \"new\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'textAlign': 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getPerformanceAnalysis,\n        className: \"analyze-button\",\n        disabled: loading // Disable button while loading\n        ,\n        children: loading ? \"Analyseren...\" : \"Prestaties Analyseren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"analysis-title\",\n        children: \"Prestaties Inzichten:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n        children: analysis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"digYJEwOt/hwXdwSPOdxzM7EsJI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Papa","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","oldData","setOldData","newData","setNewData","analysis","setAnalysis","loading","setLoading","handleFileUpload","event","period","file","target","files","parse","header","dynamicTyping","complete","result","data","processPeriodicData","metrics","forEach","row","name","Set","add","key","undefined","push","Object","keys","Array","isArray","values","filter","v","length","reduce","a","b","size","fromEntries","entries","_","getPerformanceAnalysis","oldMetrics","newMetrics","comparisonData","map","Name","prompt","JSON","stringify","response","fetch","method","headers","Authorization","process","env","REACT_APP_OPENAI_API_TOKEN","body","model","messages","role","content","max_tokens","json","choices","message","error","console","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/casper.dekeijzer/Documents/Github Repositories/OpenAI Agent Analysis/openai-agent-analysis/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport ReactMarkdown from \"react-markdown\";\nimport './App.css'; // Ensure to import the CSS file\n\nfunction App() {\n  const [oldData, setOldData] = useState([]);\n  const [newData, setNewData] = useState([]);\n  const [analysis, setAnalysis] = useState(null);\n  const [loading, setLoading] = useState(false); // State to track loading status\n\n  // Function to parse CSV\n  const handleFileUpload = (event, period) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    Papa.parse(file, {\n      header: true,\n      dynamicTyping: true,\n      complete: (result) => {\n        if (period === \"old\") {\n          setOldData(result.data);\n        } else {\n          setNewData(result.data);\n        }\n      },\n    });\n  };\n\n\n  const processPeriodicData = (data) => {\n    const metrics = {};\n\n    data.forEach((row) => {\n      const name = row[\"Name\"];\n      if (!metrics[name]) {\n        metrics[name] = {\n          \"Messages Sent\": 0,\n          \"Unique Conversations Messaged\": 0,\n          \"Conversations Marked Done\": 0,\n          \"Unique Customers Messaged\": new Set(),\n          \"Avg Conversation Handle Time (s)\": [],\n          \"Avg Sent Messages Per Conversation\": [],\n          \"Avg Sent Messages Per Customer\": [],\n          \"First Contact Resolution Rate\": [],\n          \"Avg Message Response Times (ms)\": [],\n          \"Avg First Response Time (ms)\": [],\n          \"Median First Response Time (ms)\": [],\n          \"Avg Time to First Resolution (ms)\": [],\n          \"Median Time to First Resolution (ms)\": [],\n          \"Total Time Logged In (ms)\": 0,\n          \"Messages Sent With Shortcuts\": 0,\n          \"Percent of Messages Sent With Shortcuts\": [],\n        };\n      }\n\n      // Aggregate numerical data\n      metrics[name][\"Messages Sent\"] += row[\"Messages Sent\"] || 0;\n      metrics[name][\"Unique Conversations Messaged\"] += row[\"Unique Conversations Messaged\"] || 0;\n      metrics[name][\"Conversations Marked Done\"] += row[\"Conversations Marked Done\"] || 0;\n      metrics[name][\"Unique Customers Messaged\"].add(row[\"Unique Customers Messaged\"]);\n      metrics[name][\"Total Time Logged In (ms)\"] += row[\"Total Time Logged In (ms)\"] || 0;\n      metrics[name][\"Messages Sent With Shortcuts\"] += row[\"Messages Sent With Shortcuts\"] || 0;\n\n      // Push values for averaging later\n      [\n        \"Avg Conversation Handle Time (s)\",\n        \"Avg Sent Messages Per Conversation\",\n        \"Avg Sent Messages Per Customer\",\n        \"First Contact Resolution Rate\",\n        \"Avg Message Response Times (ms)\",\n        \"Avg First Response Time (ms)\",\n        \"Median First Response Time (ms)\",\n        \"Avg Time to First Resolution (ms)\",\n        \"Median Time to First Resolution (ms)\",\n        \"Percent of Messages Sent With Shortcuts\",\n      ].forEach((key) => {\n        if (row[key] !== undefined) {\n          metrics[name][key].push(row[key]);\n        }\n      });\n    });\n\n    // Compute averages and finalize data\n    Object.keys(metrics).forEach((name) => {\n      Object.keys(metrics[name]).forEach((key) => {\n        if (Array.isArray(metrics[name][key])) {\n          const values = metrics[name][key].filter((v) => v !== undefined);\n          metrics[name][key] = values.length ? values.reduce((a, b) => a + b, 0) / values.length : 0;\n        }\n      });\n      metrics[name][\"Unique Customers Messaged\"] = metrics[name][\"Unique Customers Messaged\"].size;\n    });\n\n\n    return Object.fromEntries(Object.entries(metrics).filter(([_, data]) => data[\"Messages Sent\"] >= 10));\n  };\n\n  const getPerformanceAnalysis = async () => {\n    setLoading(true);\n    const oldMetrics = processPeriodicData(oldData);\n    const newMetrics = processPeriodicData(newData);\n\n    const comparisonData = Object.keys({ ...oldMetrics, ...newMetrics }).map((name) => ({\n      Name: name,\n      \"Oude Data\": oldMetrics[name] || null,\n      \"Nieuwe Data\": newMetrics[name] || null,\n    }));\n\n    const prompt = `\n      Vergelijk de medewerker prestaties voor de volgende periodes:\n      ${JSON.stringify(comparisonData, null, 2)}\n\n      Identificeer prestatietrends, verbeteringen en gebieden die verbetering behoeven.\n    `;\n\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: process.env.REACT_APP_OPENAI_API_TOKEN,\n        },\n        body: JSON.stringify({\n          model: \"gpt-4o-mini\",\n          messages: [{ role: \"user\", content: prompt }],\n          max_tokens: 2000,\n        }),\n      });\n\n      const result = await response.json();\n      setAnalysis(result.choices[0].message.content);\n    } catch (error) {\n      console.error(\"OpenAI API Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\" style={{'textAlign': 'center', 'marginTop': '0px'}}>Prestaties Vergelijken</h1>\n      <p className=\"description\" style={{'textAlign': 'center'}}>Upload hier de CSV files van de periodes die je wil vergelijken.</p>\n\n      {/* File Upload Inputs */}\n      <div className=\"file-upload\">\n        <div className=\"file-upload-group\"> {/* Wrapper for the first file input */}\n          <p style={{'fontWeight': 'bold'}}>Oude Data</p>\n          <input type=\"file\" accept=\".csv\" onChange={(e) => handleFileUpload(e, \"old\")} />\n        </div>\n        <div className=\"file-upload-group\"> {/* Wrapper for the second file input */}\n          <p style={{'fontWeight': 'bold'}}>Nieuwe Data</p>\n          <input type=\"file\" accept=\".csv\" onChange={(e) => handleFileUpload(e, \"new\")} />\n        </div>\n      </div>\n\n\n\n      {/* Analyze Button */}\n      <div style={{'textAlign': 'center'}}>\n      <button\n        onClick={getPerformanceAnalysis}\n        className=\"analyze-button\"\n        disabled={loading} // Disable button while loading\n      >\n        {loading ? \"Analyseren...\" : \"Prestaties Analyseren\"}\n      </button>\n\n      {/* Loading Indicator */}\n      {loading && (\n        <div className=\"loader-container\">\n          <div className=\"loader\"></div>\n        </div>\n      )}\n      </div>\n\n      {/* Display Structured Analysis */}\n      {analysis && (\n        <div className=\"analysis-container\">\n          <h2 className=\"analysis-title\">Prestaties Inzichten:</h2>\n          <ReactMarkdown>{analysis}</ReactMarkdown>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}